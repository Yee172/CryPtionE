# We shall define C(n) to represent the number of cuboids
# that contain n cubes in one of its layers.
# So C(22) = 2, C(46) = 4, C(78) = 5, and C(118) = 8.
# Find the least value of n for which C(n) = 1000.
# ----------------------------------------------------
# Analysis: brute force
#           the cubes in (n + 1)th layer of a * b * c cuboid is
#              2 (a b + a c + b c) + 4 (a + b + c) n + 4 (n - 1) n

a60e44c63ea1249af006e63d4d01756fb36060c03f2ef64ae1296da19f3e82251f93851ad4d0abd93e81e8a514a10f5aaf6c66149ca037b5023e098870f17b68cce6aa2a77642d3d53800ec86cef7dbbcd18ecb84757a96a36a117cea5454ee8c86e7f141bf576c6eb87de18ab606bd0ba80bb4978929a371a7a38e0d287eb08f14a7d18edcd7868f8ea337ef98119be636b789ea63d57e5c8e732ac8d57aa2d1fe7b0983102ecf734db5cc05bac94d88928e37d869a6da27d92cad09605e9b21912ae6c37f6764ca32269694ae36eb0a95365e7e2794836e241de454881c2571f8f94f67c1cad82fa1114630d706aa390bc09bd5e402407111a3c56bd13950c7c2d2d7c14f9072acf4da6f41c08cd2e92657d05ae2ea661cda79c3c80b636c156e3931edb91281275b98b9249285bf614cceb54daff6fa23110befa1a9bdc3ace237e068bf1f4796b396a5c90f9f8e5cd37169816c22cb90100b77c1eefa3147fea10eff36ec136696b0ec919dc06ce25aab822575c08c5f11fe009474375b82f8402b25455f151f44d1e60539dd61f104cd0c8058ad41d0f2a16420d58339cca54494a52f90ff69ba778a1a6a40edaafaefdbde62fcc2f288c20389a071c2eb8e74a41f9887647c3a9ba3c9d83fe11d65442ab247bd1fef1fec4cbb2235375bf28dfa2477d4f3250c871576c4998359fa6a8c04017d97148246a6e2d51da89dcd695777c2d2d7c04dd932777ea406f916f961dcf7717535eb54471faa804c7e65882db11bfef1d512191d636501a5a820da7ffeda4d77441bc0e5d1d135d45958f084cc71a5bfd6419980d663d17c2708868531db39b4e37b2258889b0582f2fd8d97f1d5716d2da83222876b0e66a3e24195535167e1673ddb5f308d2f5e17e9bf93489519996789acbfa542cb349e16d26de844b64dae5861cc27023bf83c2a21de1e5408ea5609f5f1c421eda3114268c5b53bacd846b7a3b5ac8a25c08a9e731d1d75f2173ff7ea94d1cc6829a909d21f3cb7e71fa98bfb12f0bfe775a72781869f78135174d18ccfa88a27d3d6d8777a9e3667bc16bd5c61ccd538e3f43daa2f9021fc17f7c2d2d7c48ca15f24737284890f3e084face3e9b3d11f174e8c203868cea2572530b8434cc0213e9e06d00d2625ab453cd610d0c8622d58efc42c5326e7f0be46e5976c88dbbd490e8e065014774b4936fc0392a163c9bb975713c062da5282be7bb6a3a62758aefdfd5b1b6b6c59a91f51c78f22ad755a1fd93ef463c29c213069f3c46597fba3ae6aa88b44669d2a63e7fe32b7d737ea0032025bce1cd22f2667c3cc6e3ef28fb24e85c2f43db524a70ca0a9d0974a5002520a7850f43c8c04fdbeec6058b9885e5c34a665ea9952c7da0b58366e90ec1a8cfbd756a500220955dd183f89defc2ac5e8473749a083ddb8e50cd369664b751c16a03586cc9a05db301897c2d2d7c4b1736471a0fa0c3bcb19f53195b31bfdf43a8a68d810d0e478387249f1f7dc4695ce70b6a385d8e729128cb4231230e45dad68e9459be46884664dedb24ea1555ca46a7e5e34cb8e9a4116c06e50b2cc54ef1eeafde79e70e77a415fc2c44a6970cd3bcf83ce27314404a2c663417962b7ca82340e7a959d6c1df4d20a8d6d68eeb0616e3c8aad42b597fe4e980e248bda7dae6e3a06e5e32e3a80395eb545610f425d9f7aa1d58a61f821bc90b4519f679a0bfd2ee27438d83c017e1a91425c75ae890f32febf08d5bd7724516e3fa941c53d3315d035cc5b92574258e402b188e64351ff2f7071180f6d84f4ff788d220aed16f9e0b21b962d196b02819b7
