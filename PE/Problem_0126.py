# We shall define C(n) to represent the number of cuboids
# that contain n cubes in one of its layers.
# So C(22) = 2, C(46) = 4, C(78) = 5, and C(118) = 8.
# Find the least value of n for which C(n) = 1000.
# ----------------------------------------------------
# Analysis: brute force
#           the cubes in (n + 1)th layer of a * b * c cuboid is
#              2 (a b + a c + b c) + 4 (a + b + c) n + 4 (n - 1) n

564cdb2e9e0d5d526c90b719313abafb4106492f27841012c3422e114b8e3e17aef72f8b42e0aac7fa6436ea8efae0ee1abd
445b6edbb9ff8b46cf485871e158614d41075032a9124d46c82c9dba6be9af8303e6b0fc61910a4e941de7cbcae4ae8d9dea
7f22b262efccc863935610bc04ffc7f1a13e0a1fab1714e01988e7d326065f9fa6c8f124a1c1f19df167d8e13aacd14c09d2
d39e4138e5d5655f9e7ae0a444605ad84ebb784f4d976708aaa4418f48d5df685210fa7b2e15e330e40acee95962c49eec40
c426a0a71189d692a0cee43f5c95aa804b69998013df915ec5393f2530f95bda342327a4e89eabc68ea2504092b95cfa692c
6c4bd45eb5fb7c2d2d7c4a34decf547ffaf3ddb35bde79ec614ee27a89435b1efc270a92093849ec01d21c12216ad8a0ae44
223556863af9257b2eb6fa2cde16bf253b0f7619d8cfa2806ea662edc4a1c571c1fa81924c57c74fc8460c58980e45090b1d
bd5b6394601106860e0e2eec277de8509c3858c3b21f266bffe53b6f0681a9e39c514a2521ab9145ecce7aba5a55d13205a8
4f85bc7eb9efc942198fe8ac5a3e1891e0bb62e6ce8bf178851e423c9479d45aeb024b658454b0228d03d44a9dd800259419
67ccff7b68aab276887acf33927dcc5ae1026bff3130521892ba3d8f0ebc1e213914a40cedc783baff8c68d858e6d6b8ebf0
5fc5bc15e05ac4f86f5aaa635206d1277c2d2d7c6ca803075da7b084921269d26d8dd98a37423d371e26f462938b06cf874f
bda4d88391f461effb2fd4629af85d62284e86a86afc1da5788c28d6ff85d977d6d54f2837f7357bbc79dc4cfad056011322
819d2cc67af5b8c8b8aca1837b36f9d0767078d058fa760d9bd4e2d3244124db32943fd020cb3b2cf89a5527d6f70bd66de0
23ddb93c65ca5ae81d2027af93ab2f9ce69184c6ff4a535ae9844bb9b767c33b01910814e74e3568df606feb2b39d25ebcbe
7f582d8ef8791a7d0df41af8f440f021c31ce37e64ac6b1f399932e270e2b1658f1b89213eea846776eb1d25e7fad6c9518e
8e604bcf41cfd7960dde20904017e0b9502f5e0a7f9405e635877c2d2d7c8fdcd55c6ac34660919921047de7c2b2ebc6d510
6a901b1ff0e028d8dac16fe47c1d42baa7da5f5383ddf8b21bdbef6d35350ccd525d240829cc7fcb6af84aed7941ee22f0d8
896a4adf2e3ca8d2452e2b02bfa4e3f43e5ced866a5580531a835e85fa003ce2a1587c9b3f1070cf8ae7ffd046f5d53a0b17
289dff9b9e16fdb9898eae0641f79298984f822f5eaa6aded3bb0b4cc24373d94ab7d34a68d45698dcee89d2fac8f6f883a0
af0b6afe4f930c844c9096ba27beadaa31fe396b70ee330f51fffe3cbe888d8e349edf20b29665153aa406c21813f3f9d074
ce2a636b1f92b9585400b0136bf9ae9a57ff985056ca814f5bda9666359f7340ea70b4787c2d2d7c10d69414159c9a8e5d30
9498fef183dcb91726d587790419475e78a7bd5cc0a7fe5cf11c24b48f2506a2af7f7508272e71d6048068e54da9b16f0826
700db50dda9a3568bddf2024935b1ff3f341d900c7b44483b0c201578afdff9eeb73a1aad172fb73a3bd2f023352e8b8dd89
c661dc2291637390f793d806f031e6bdd4da0c820d6f07b2432ad0704148c88f8a9d07872ae8f0e1975931234bd08faa6b39
85b365844f5b9015d9af47c3982f0e089307e49b59b0b15445cf0ee008156e4fdfb26b0dce2722835787c9284667661038de
24cf6280b8d9fb3c65233a25d9df5a365173834a3786a5b496e1c75cbba974fc96a5c4a6390d1fb010cf980a9519
