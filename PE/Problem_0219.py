# Let A and B be bit strings (sequences of 0's and 1's).
# If A is equal to the leftmost length(A) bits of B,
# then A is said to be a prefix of B.
# A prefix-free code of size n is a collection of n distinct
# bit strings such that no string is a prefix of any other.
# For example, this is a prefix-free code of size 6:
#    0000, 0001, 001, 01, 10, 11
# Now suppose that it costs one penny to transmit a '0' bit,
# but four pence to transmit a '1'.
# Then the total cost of the prefix-free code shown above
# is 35 pence, which happens to be the cheapest possible
# for the skewed pricing scheme in question.
# In short, we write Cost(6) = 35.
# What is Cost(10^{9})?
# ----------------------------------------------------
# Analysis: dynamic programming
#           Hint: when xxx...xxx is the lowest cost code, split it into xxx...xxx0 and xxx...xxx1,
#                 then the cost will add ((the cost of xxx...xxx + cost of 0) + (the cost of xxx...xxx + cost of 1) - the cost of xxx...xxx)

4b66198c4cf4aae52ac607dbb3b0d4a560ca2f19387e009f7346921b9e3d967af77a63384cc8cdc17124380e8ce8a9e82972
b22fc66e87011bf784000d203c66b0b45396e105b3a54c4bfad7406527d3027c043f85a586bcc41f55a8d7df6c1c7feead38
8e5c1b36414e6fbb5767fe220c4f7ab372bcf045f510101cac5649cf37f449502af66c918c2be2d1108b7e261ae76c243a53
fda9439e720d05cf89fd24ed40e30303643ac8b9f2f9d296c235aeff8f185ccc423147fc4aa0e41d98162a864398deb345a4
806237996632dc6ff91e6a44a9612fda0f98bf003cb589b5888c3687a442d1c62f572ac63007fa7b370ac9e4c01960974d37
f52366ca46f27c2d2d7cab2e7dc3ad2ba153313426ec9d00c381292037e94f9f73c470d395b0e3c9cf593a0713fcf91321f6
13aba0fbb292112f97317797e906389a2d5a6c29bdca4a4fe65318a589b09f0c24d68f932445ba981fbc106bc118d4215379
f675c87262dd29ec65ac8d4a33a13d39b709ca51cf0fca6f8eceedcce060c074b0e425059a6354bb50cac4311941d829f06f
2b43b42eb3f65308523178aaac7dc1f6271c851051252e8b58953318691197b586925c1eebf1c8c99c5743491e680ba86494
e1b13388493a2e970ebffc6722e22b2a142f924742480879a68b16ca19c1fca5d2ecd9da2fd0ce8f0d7b35fe3259139b5f65
7ac2f9dd80cefc007e09952d61a961af7c2d2d7c9190b12d1fd197a786da7cbf4eed56a001855b85d510a12d25c06c12593a
ffe581627d6490b0bcb1d4c644d42f14b4b1782574b0ff9530dbf5369404bc00c861105e40e5cf3806206d5b4a8e5415e67a
5aad738d7824b7d57531744e6cd1e6609c14c1fdcd9a59e447f43bcb82a7e05942e8007a58cc005b3ff0376c185695e565e4
4b1faf1c912f8f9cb11f346229bdc511c02bf180e30cc6d0f7cbe9f223352f1f451355df6a2db15248cc3475ac01277b7749
c428a095a88010417f129212ba81bf8f5deeb390a0e15c777babb4784905ae50c27f5f91aae47a0d9fa69d8d2de63aebe91e
fe523b30131370bd4fed0257da0cb51cccd74d0f5c74008e53c77c2d2d7cb902953ef69c492601aa6cb9bf88a6d2d3e6afe5
77d7380b5e74b7c6f327bee352a0c4b09ebf74bd7f65063900a6809223056c7122e2dced47f7711b4f5bbbdff9e834fb8011
74deab8c4224c901461f1921b59f6f82d1cfd69598b42407559b9d282b9b0dbc8818422ec772c6da489347db4611d36adb74
17925e13ff4ae76af3cb3b8ffe015d599f3351f0fec34efb3251a6b9ffd8b6b38360bd415a783af2d0511326c3544bc3ce18
e7997cca20c30328805fffde24c23ce0200d9dc92863ce68960b76836c20cb840ac3ad033045db28f47166d94827104225f6
ab26ccda2efd76af14a29c7e09003e5cc45e3c2b1bd71fa19db6045c665fce8f61d6d8187c2d2d7c018d5706c61f73cb28d4
9b776375de82955949dc5b95734b6535bf69609b7d943bc98359cdd7ac4be83f37d9960e85b5c3a3c9d7d99e4f27928626e6
eb648bc6669f1688d5cb95932eb91dfcaa5a6c8bf6e90bd3e67d2055746e46af5b0776028828a9c056fefae27e4438b03178
e7fcea896a5bad1e7bac0f2ee4ffe40f44cad23080b2ccfe1f63d7d8f2ce3e8c0aae540b8f1f6b53cf7c14affae5b3bf0e3a
1be88b7a913e1e3e60a3e039d58e3d8ea4409210f9defd9830359c93b512c0bb97cae7de2113b4a501ed09e262cc70b365fe
41765f308229e60292164e1feb952ced84bdde64420482cf2fb1d791c41cbe13e5c837c00be38824dc2b344b60a5
