# Let d(n) be the number of divisors of n.
# Let M(n, k) be the maximum value of d(j) for n \leq j \leq n + k - 1.
# Let S(u, k) be the sum of M(n, k) for 1 \leq n \leq u - k + 1.
# Find S(100000000, 100000).
# ----------------------------------------------------
# Analysis: brute force
#           Hint: use queue (two stacks) to maintain the maximum value

65101652609653ad4d2613ba4b6a02d52093abc0d72824f8e6dd8e6ceb2a8d94a717e8dbcf6f2245bd413dd55e0473955f02
73affefeb1c0461ce4aec1b5c410479b6ecd4375b35be4a66c69ab6adc5455c2a5c439613b44fa318d8bc590d75bf1ec11c8
f27c701da42160592924aaeab7ddefecfdb749d4c3af6110740d5af2b08d72664ec6d85f1bf9880d74be19dbcb69c2d4036a
3278806e1ec042e5e49f81335f4c7fccc379db3766aa3dbf22df103e61d69057efa88d5e3df4009dd36aabe38d8bab751636
7eb387e440ea03168725aab938ace081db3ea0c47a91b70eeb3bd2219959e295585c53d7cd6ab93dec1e3293c581b7b77e24
06b56a3da4607c2d2d7c0fe9dbe2c4d736235616f6c46332c3ea9780b563419cb42a7980a98521c1b7ce51b21248b5f898a8
b90cbb2e0f207f1162fc203d358f1d8d300fec8d7b5b6391e2671c1c9c8505597305c274d5f65d871ecdd7d5ac16e149bce2
d4c6e8a0ef03ed73d3af982b6cb53211a2d46778538be0dc1d157ebcbc789e7d862be0d9e52411f2fc18b976606a17309870
0edbd14a740177c5e0d8b7a6ece80890b66e9039d179b9e447013c62b4763c104b86a3bf130a5f53689a97ed485f2abf61bf
48ab62b7934e9d6f866ef7ccc7fb04d1fcbdd0874c66deb22b20b66e27be8e4ef5cd0feae13254f0921428361d0c48a4fd9f
f3c5809a2405725e62e0409074565a307c2d2d7c321395135a16d560c0b36554d65818f4ec1075a7b144f4380155aeb4c8e7
4cae2a0842afa82e575ac0400daf3984b9510fccdaacd73010845d0695e0818e30dd3400eede970934b8bc2dd85070fb8b39
e67a6d711ccdb6ca46d4a6c99f46862708007f787412639d97bafa0fec47c0e39b7c11080e06b6959a53e5801726803977fa
c60ce1bbb9d251b8f658e7982a9a77cfd1dc0d9add9f346b665d892e51a24e878d0272385806060f82b878cfdea48020bd7a
ddf2f750e36751f31b00830f0a817e233902e51745305bf27320de7e063c99fe843397e4e8f04b04a0d2901fbef49f144e1c
bc62da581064d99740d6d03dcf88c4a7a4c6b2f218a7759d493e7c2d2d7c55754dd923254f5ffaacdfb8dce2107ee94aea35
07116511cfdb4b04244b0e8cbcb52f2e3f61c14efbcd5984d39b58e0c4f34c708d7f71c83a55cef6d76e2ee7ffbe3bfde7e1
a9399c623306c90ddb376bda3a5ea3fe59fc53fb955d5c968e7bb0c82e91701bf5d9c7da09ba5cc9d49e65a92db31a3674f0
a8b6c7b1abf569a2844217f4dbfe632fa1f465a372ce4108d3eb108f484111422ece6d75c8c552b49b964e0807cae19923b1
97a1afef219cd7fb2d4d2b49252b77d3243a39f52664b869cfba649c8f5ecef2e1009e1c75fd0c6c275759bc5a2818ac6bed
d5add02a9b5427c216810568d8e13d7d1662b11065a2ac6c6f880ad5de7e1a9f512c841b7c2d2d7c76f32b006b6b5bb37268
e81084954bacd5f4bdc5c1b2f7520507dbe27ec5f05369d38e04f1720773e1486bcd9b70a3ea61c090c85077c3271ba9fb45
7683ef6c45d74365bc6ec8f733ac0fdf43da4fb8233430cc5c212e15a941e8060309a3b16db8dd82493e983d1fb18fc84791
80ca3f8b625cfc8a0a9fcaffab15a972b801a35929a10a2f3fb0b75ae878b89a9c0c26bf44dc7b965c871b1bc002c50d9ff1
ff0e2efb657255c4c8221049efacdb7939a93d4daaf16053e484d09b27cf2a62a3a23a44de4c64eac0b058ac9e5a8b65df5f
e6220111fc0149f180e916a395196fd8fd55095fcf82423d556ce8e41153fed5f04f51b8fe9d896853b2793e87e77c2d2d7c
373ff7a45fa7451b8a9effec21042e603486976c3fcb1524b1fd3f386777796eb709bb25427d447ab21ede02ff1c6724677f
ab8d5c84fc179ac1e8708c1fbc5806a23303397c6a26d7d195307f040a2f064fd95722822ba20d666cc77155437e47cbd244
d470f83079138767589ad58f11cbd663e2e81e5677751a29bed8a6d41a514e9e681339f36ae5beb431cab4c65c930b533f5c
35e9519526fc9f540bec252ded1e522e1039c502f2a04e65b9a1300a00e36868d49c3998099c75a19c3e355fc65e1dc60c74
02e88eb2aa80cbb18c8556cba24044064db458c9c3af78f5ea52ffcad9f72ba10def9e804fa1cba4407d0d910124363b63f5
bab772385189
